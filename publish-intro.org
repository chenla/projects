#   -*- mode: org; fill-column: 60 -*-
#+TITLE: Introduction to Publishing projects
#+STARTUP: showall
#+PROPERTY: filename
  :PROPERTIES:
  :CUSTOM_ID: 
  :Name:      /home/deerpig/proj/chenla/projects/publish-intro.org
  :Created:   2017-05-23T18:03@Prek Leap (11.642600N-104.919210W)
  :ID:        6fcd8c24-7ecf-4a97-a5e4-ff7265af9e56
  :VER:       548809468.363406546
  :GEO:       48P-491193-1287029-15
  :BXID:      proj:JDQ0-5773
  :END:
#+INCLUDE: ./inc/head.org
#+INCLUDE: ./inc/macros.org

{{{breadcrumbs}}}

#+HTML: <div class="outline-2" id="meta">
| *Author*  | Brad Collins <brad@chenla.org>             |
| *Date*    | {{{time(%Y-%m-%d %H:%M:%S)}}}              |
#+HTML: </div>

#+TOC: headlines 4

* Introduction

  - [[https://github.com/futurepress/epub.js/][futurepress/epub.js]]  Enhanced eBooks in the browser | Github
  - [[http://epubzone.org/][EPUBZone - The Community and News Site for all things EPUB]]
  - [[http://readium.org/][Readium]] | Home
  - [[https://github.com/readium][Readium]] | GitHub
  - [[https://github.com/ncbi/PubReader][ncbi/PubReader: A new way to view journal articles]]
  - [[https://medium.com/@sandersk/responsive-ebook-design-a-primer-8bba01328219][Responsive Ebook Design: A Primer â€“ Sanders Kleinfeld]] | Medium
  - [[https://www.ibm.com/developerworks/web/library/x-richlayoutepub/index.html][Create rich-layout publications in EPUB 3 with HTML5, CSS3, and
    MathML]] | IBM DeveloperWorks
  - What is EPUB3, Accessible EPUB3, EPUB3 Best Practices | Matt
    Gerrish (O'Reily Books)


I am so sick of websites -- there is so much crap that vies for one's
attention it's no wonder people complain about being distracted.

I've been looking into EPUB3 today to see what that can do for us, and
I was pleasantly surprised that EPUB is such a powerful, simple, open
format.  The great thing about epub is that it leverages the web stack
without using /web browsers/.  There is more structure than the web,
which is all good to me.  I'm now exploring if it can be used for
large form-factor books -- these wouldn't open on mobile, but that's
not such a bad thing.  The sequential nature of epubs, and that it is
designed to be paged, not scrolled, is very powerful.

Ah! and it's very attractive that epub is portable -- it can be served
from a server, but it works just as well as a file that can be copied
and pasted as well....  Send the file -- which could include bmf index
and metadata and source and then it can propagate through the network
via something like bit-torrent, and then be indexed and integrated
into your bramble....

The idea of being able to weave an epub into a bramble -- not just
keep it as a zipped file on disk, is very interesting.

In fact, by using the css media, we could even have versions designed
to run in text-based displays like an emacs app...

Looked at [[http://vivliostyle.com/en/][vivliostyle]] and their platform is impressive, but all
proprietary, and sadly CSS Regions has not been adopted by browsers.
In many respects what they are building is a lot of what I would like,
but again it's not open....  non-starter.


One concern is that epubs are outside of the web in most respects
because they aren't being served from a web server that a crawler can
index.  I don't know if you can link to something inside an epub
either...  These are important issues.

---

Thinking back to my early work on BMF, I had originally thought that a
burr would be a collection of files zipped up -- like a NeXT app.  In
the end it seemed more trouble than it was worth -- but in a
decentralized system, where you are replicatig stuff all over the
place and you don't want to put too much computational load --
converting, processing etc so that you have to generate all that stuff
every time you get a file.....  the whole zip approach does make
sense.

---

Literate EPUB....  If an epub included source, then we could switch
between the epub and source and update the document.  But since we can
make external calls from within epub we have the possibility of
documents being able to update themselves -- perhaps that means that
there is a source container that is running the code and then from the
viewer client we can connect to the container and dynamically update.

---

The Web is still the WEB, images, video and audio have become part of
the web because they can be embedded.  Other things like email,
discussion forums and social media are Web Apps -- also part of the
Web.  But books in the form of pdf, epub and mobi etc are not part of
the web and they still are not suited to conversion into web pages.




--

So if we start putting all of this together we can see the beginnings
of a document oriented distributed Web
