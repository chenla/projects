#   -*- mode: org; fill-column: 60 -*-
#+TITLE: Chenla Scopic_Press Introduction
#+STARTUP: showall
#+PROPERTY: filename
  :PROPERTIES:
  :CUSTOM_ID: Chenla_Scopic_Press_Introduction
  :Name:      /home/deerpig/proj/chenla/projects/press-intro.org
  :Created:   2017-05-15T13:12@Prek Leap (11.642600N-104.919210W)
  :ID:        0cfebbc7-c92c-4bb7-bfb8-6786e0b3eb5d
  :VER:       548100827.577841630
  :GEO:       48P-491193-1287029-15
  :BXID:      proj:DXT6-7548
  :END:
#+INCLUDE: ./inc/head.org
#+INCLUDE: ./inc/macros.org

{{{breadcrumbs}}}

#+HTML: <div class="outline-2" id="meta">
| *Author*  | Brad Collins <brad@chenla.org>             |
| *Date*    | {{{time(%Y-%m-%d %H:%M:%S)}}}              |
#+HTML: </div>

#+TOC: headlines 4

* Introduction


 - [[https://medium.com/@nickkokonas/why-we-are-self-publishing-the-aviary-cookbook-lessons-from-the-alinea-book-e89236ab6ca1][Why We Are Self Publishing the Aviary Cookbook - Lessons From the Alinea Book.]]
 - Warehouseing, order fulfillment: [[https://www.blackbox.cool/][Blackbox]]

 - leanpub.com
 - lulu.com

Establish what I'm calling a /Scopic/ press, that publishes works that
capturesand include all of the surrounding context of the main content
being published.

The physical look and feel of published works will be heavily
influenced buy the three volume Plan of St Gall (1979) which is a
large format work with copious references, footnotes and
illustrations.

The primary mission of the Press will be to publish Chenla's
Prologemena and Primer for building and maintaining a distributed
antifragile technological civilization.  The work is designed to
provide patterns, designs, code and core descriptive and proscriptive
texts that will provide a foundation for a) moving from today's
centralized post-industrial civilization, b) rebuilding from after a
collapse and c) building a new civilization from scratch in various
locations on earth and throughout the solar system.

It's expected that the work will take the next 10-20 years to
complete, and will be published in installments with the first
installment printed in 2018 and by 2020 be published on a quarterly
basis until it is complete.  The majority of the work will not be in
print, but will comprise a hypertext and graph-database that is
managed in part by a weak semi-autonomous AI subsystem.

* Towards an antifragile distributed technological civilization

The civilization envisioned aims to be pragmatic, egalitarian and
above all else sustainable economically, culturally, and ecologically.
Rather than proscribing a top-down master-design and plan that is to
be filled in like a child's coloring book, the primer will provide
patterns that can be adapted and combined to set in motion generative
processes that meet sustainable goals over very long time frames.
People don't change much in a lifetime, and societies take many
generations to realize substantive change.  Cities that have been
designed on a city-planner or architect's drafting table are doomed to
failure.  Cities and the infrastructure and buildings and people in
them grow organically over decades and centuries.  What is needed is
an Ent's-eye perspective that can keep long term goals on track over
time frames that span many lifetimes and generations.

The work is meant to be a living document that will changed as new
things are learned and we as individuals, civilization and a species
learn to adapt to future changes that we can't predict or even imagine
today.  But the primer will evolve over time to always address the
needs of the present in context with a history and with an eye fixed
on the future.



* Localizing Globalization

  - [[http://www.claremont.org/crb/article/sending-jobs-overseas/][Sending Jobs Overseas]] | CRB
  - [[bib:baldwin:2016great][The Great Convergence: Information Technology and the New
    Globalization]] | Richard Baldwin (2016)
  - 

The recent alarm about how robots and automation will eliminate jobs
and only make the rich even richer is a very real scenario.  But it
doesn't have to happen that way.  Automation using AI and robotics is
inevitable, but the form that it takes is not.  Every major
technological revolution results in breaking up existing power
structures and for at least a short time, moves that power from the
center to the edges.  Before power beginds to consolidate around a
small number of players.  We are at the beginning of one of those
moments in history.  What we do with it is up to us.

One of the core ideas that will be introduced in the primer is
/process guilds/.  The idea of decentralizing production and logistics
to make possible a network of production that is far more flexible and
powerful than can be achieved through centralized factorys and supply
chains that are highly efficient at scale.  Robotics and AI will make
it possible for many small operations come work together on a job by
job basis to be able to produce far higher quality goods and services
that are customized for individual needs and when possible to provide
these things as close to where they are needed as possible.  The
system will work a somewhat like bit-torrent, which breaks large files
into smaller parts which are /seeded/ from many different places.  So
that when you download a large file such as a movie, you are not
downloading from one location but many at the same time.  The same
idea could be applied to work as a /thing-torrent/ but instead of each
seeder serving a copy of a part of a file, each seeder will contribute
to the production of a product or service with the last step in being
the delivery of a finished product.  Rather than a single company
placing orders for materials, or sub-assemblies or design or
processing, the network itself will organize it and as each step in
the process guild is bid on and assigned, the network will then create
a torrent that the customer runs and will result in what is needed.

#+begin_quote
But around 1990, the cost of sharing information at a distance fell
dramatically. Workers on complex projects no longer had to cluster in
the same factory, mill town, or even country. Other factors entered
in. Tariffs fell. The rise of “Global English” as a common language of
business reduced the cost of moving information (albeit at an
exorbitant cost in culture). “Containerization” (the use of
standard-sized shipping containers across road, rail, and sea
transport) made packing and shipping predictable and helped break the
world’s powerful longshoremen’s unions.

-- [[http://www.claremont.org/crb/article/sending-jobs-overseas/][Sending Jobs Overseas]] | CRB
#+end_quote

  - network/compute/storage
  - order fulfillment
  - cost of goods/services
  - delivery
  - market


#+begin_quote
But computers were the key. Once a complex manufacturing process could
be supervised from afar, it could be broken up into the simplest
constituent tasks, and those could be done almost anywhere. Why not do
them in those economies that paid workers a pittance? Far-flung
“global value chains” replaced assembly lines. Corporations came to do
some of the work of governments, because in the free-trade climate
imposed by the U.S., they could play governments off against one
another. Globalization is not about nations anymore. It is not about
products. And the most recent elections showed that it has not been
about people for a long time. No, it is about tasks.

-- [[http://www.claremont.org/crb/article/sending-jobs-overseas/][Sending Jobs Overseas]] | CRB
#+end_quote



In effect the system takes most of the middlemen out of the picture,
which means that finished goods and services will be far cheaper.
This is exactly what happened with shipping pallets and shipping
containers, they cut out longshoreman and workers who loaded and
unloaded ships, railroad cars and trucks, so that goods could be
transfered from one form of transporation to another in minutes or
hours with a handful of people instead of days and weeks using scores
or even hundreds of people.  When this was combined with computer
networks and global financial transactions over those networks the
result is what we call globalization.  Present day globalization works
best at scale and with moving very large numbers of identical things.
Small producers and small production runs could not scale large enough
to take advantage of the system, so ever larger centralized production
replaced smaller producers.  This is not only true for industrial
production, but for agricultural production as well.

The next stage of globalization will make it possible for small
producers to compete at small scales with companies producing at
scale.  And I believe that there is a window of opportunity to
leverage the strength of small producers to be able to produce highly
customized goods and services that the large centralized producers can
not provide.  If you have a choice between something made locally,
that has been designed and built specifically for you, for the same
price as the cookie cutter product from a factory on the opposite side
of the planet that is designed to break down in three years to force
you to buy another one, which would you choose?

Small local producers who build things that last and are designed to
be repaired and upgraded can be much more than just sell you
something, they are building a relationship with you that might span
decades or even generations.

And nearly every order will assemble a custom supply chain, production
chain and logistics with bids and payments all happening
automatically.

---

Another way of thinking about what I am proposing is to take all of
the things we have learned that made globalization such a success at
scale, we need to apply to localization at small scales and that the
way this will be done is through automation including robots and
software that includes AI.  In other words, localization is
globalization without needing to scale....


** Just in time

-- in effect you are routing production, and using a traveling
salesman problem type solution to find the best match between the
location of each part of the guild and the end destination.

-- this is very much a just-in-time model, which can be both a bug and
a feature.  In the case of the Bangkok floods, just-in-time resulted
in the whole chain breaking.  But process guilds are designed to be
flexible so that if there is a problem in one place, the system will
route production around the problem.

But this is not enough -- the system has to incorporate
load-balancing, and be able to anticipate demand but also slowdown in
demand -- the larger the network becomes the more efficient it will
become because the load can be taken up outside a bioregion when need
be.  And seasonal fluxuations in different regions can mean that
production in one place because it is a low season can continue and
delivered to places where it is high season.

Low season is also the time when stockpiles can be built up, like
chopping wood throughout the summer for the comming of winter.


** The end of economies of scale

Economies of scale is the undisputed meta mantra that has been chanted
/ad nauseum/ by every industrialist or industrialist wannabe for the
past hundred years.

Things become increasingly more efficient and cheaper the larger the
scale at which you do them.  No one would argue that.  And this has
been true for a very long time.  But what if it wasn't?

Scale and working at scale is based on some very fundamental
assumptions.  But what if those assumptions were not absolute?  

Oh, you can't compete against Walmart, or Seven-Eleven or McDonalds,
or Alibaba, Amazon, Google, or Facebook because they can buy things in
volume and get their costs down lower than a small shop ever could.
Google can get electricity, bandwidth, and hardware cheaper -- they
have the resources to build datacenters so large that they have their
own the name, the "Googleplex."  Industrial scale farms can keep their
costs so low, and their volumes so high that no one can compete with
them on price.  Small farmers have been driven out of business because
they can't even cover their costs at the prices that the industrial
giants can make a profit at.

  - scale means that products must be standardized, and limited -- ala
    Henry Ford's you can get a Model-T any color you like so long as
    it's black.
  - scale means that there are no small runs -- all runs must be
    large, and must sell at that scale or the enormous capital costs
    eat the company alive.  so you must keep sales up to support the
    production infrastructure and vice versa
  - the larger something is, the more simplified it has to become
  - the larger something is, the more complex it becomes and the
    slower it can respond to change, and adapt.  Once a ship is
    underway it takes a long time to stop or turn.

Big farms must simplify to take advantage of economies of scale -- so
they practice mono-culture.  And despite all of the claims of how
miraculously efficient modern farming is, no monoculture crop will
ever reach the same production levels per hectre of a Chinese or
Japanese farm from the 18th or early 19th century.  Such farms didn't
grow one crop on a plot of land, they would grow dozens at once.  And
taken together each type of plant will have a lower yield per hectre
but all of the plants and animals, taken together will have a far
higher yeild, with far less outside inputs than even the most advanced
GM monoculture farm.  But traditional farming techniques were also
highly labor intensive and very specific to the microclimate and
conditions on each plot.  These systems did not scale.

** Everything is ERP

ERP models business processes -- in effect, we are proposing building
a mesh of business processes that are, when possible, automated, and
everything is interoperable with everything else.

The problem with all of the ERP systems that I have looked at is that
they are maps that describe business processes.  When you look at a
process in an ERP application you are seeing a description of a
process that is not directly connected to that process at all.  Even
worse, most ERP requires you to do data entry to even do that much.

There are exceptions -- sometimes inventory is included as part of the
system -- but the inventory is itself an external description, like a
library catalog.  Time card clocks can be integrated, as well as
barcode and POS systems, but all of these are severely limited because
POS and time clocks etc have crappy APIs that are inconsistent across
vendors who add them on as an afterthought.  We need to come up with a
widely accepted API for say, security cameras and biometric devices
that venders can support as a standard.  If enough applications
require that that standard be followed the venders will comply, but
not without a lot of reluctance.

As Larry Lessig said, code must be law -- we must bake our laws into
our code.  In the same way, ERP must bake business processes into the
code as well.  When you look at a business process in an ERP system
you should be looking at the process, not a description of it.



** Everything is an outward facing service

  - [[https://www.theatlantic.com/business/archive/2017/04/retail-meltdown-of-2017/522384/][The Great Retail Apocalypse of 2017]] | The Atlantic
  - [[https://techcrunch.com/2017/05/14/why-amazon-is-eating-the-world/][Why Amazon is eating the world]] | TechCrunch
  - [[https://en.wikipedia.org/wiki/Service-oriented_architecture][Service-oriented architecture]] | Wikipedia
  - [[https://en.wikipedia.org/wiki/Microservices][Microservices]]  Wikipedia

Jeff Bezo's insight was that if you are doing something inhouse, if
you open that up as an external service that people can purchase it
forces you to make that service competitive with the same service
offered by other companies.  If you are making money, then you are
probably doing okay, and your internal use of that service will
benefit greatly from it.

#+begin_quote
By carving out an operational piece of the company as a platform, they
could future-proof the company against inefficiency and technological
stagnation.

-- [[https://techcrunch.com/2017/05/14/why-amazon-is-eating-the-world/][Why Amazon is eating the world]] | Zack Kanter, TechCrunch
#+end_quote



#+begin_quote
So one day Jeff Bezos issued a mandate.  He's doing that all the time,
of course, and people scramble like ants being pounded with a rubber
mallet whenever it happens. But on one occasion -- back around 2002 I
think, plus or minus a year -- he issued a mandate that was so out
there, so huge and eye-bulgingly ponderous, that it made all of his
other mandates look like unsolicited peer bonuses.

His Big Mandate went something along these lines:

  1. All teams will henceforth expose their data and functionality
     through service interfaces.
  2. Teams must communicate with each other through these interfaces.
  3. There will be no other form of interprocess communication
     allowed: no direct linking, no direct reads of another team's
     data store, no shared-memory model, no back-doors whatsoever.
     The only communication allowed is via service interface calls
     over the network.
  4. It doesn't matter what technology they use.  HTTP, Corba, Pubsub,
     custom protocols -- doesn't matter.  Bezos doesn't care.
  5. All service interfaces, without exception, must be designed from
     the ground up to be externalizable.  That is to say, the team
     must plan and design to be able to expose the interface to
     developers in the outside world.  No exceptions.
  6. Anyone who doesn't do this will be fired.
  7. Thank you; have a nice day!

Ha, ha!  You 150-odd ex-Amazon folks here will of course realize
immediately that #7 was a little joke I threw in, because Bezos most
definitely does not give a shit about your day.

-- [[https://plus.google.com/+RipRowan/posts/eVeouesvaVX][Stevey's Google Platforms Rant]] | Steve Yegge
#+end_quote


